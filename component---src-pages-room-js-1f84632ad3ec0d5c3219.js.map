{"version":3,"file":"component---src-pages-room-js-1f84632ad3ec0d5c3219.js","mappings":"0IAGAA,EAAAA,OAAqB,EAQrB,IAsBIC,EAtBW,SAAkBC,EAAUC,QACnB,IAAlBA,IACFA,EAAgB,SAGlB,IAAIC,EAAUC,SAASC,cAAcJ,GAErC,QAAIE,IACFA,EAAQG,eAAe,CACrBC,SAAU,SACVC,MAAON,KAEF,EAQX,EAGAH,EAAAA,EAAqBC,C,gHClCd,MAAMS,EAAa,CACxB,CACEC,MAAO,YACPC,KACE,sHACFC,GAAI,OACJC,KAAM,YAER,CACEH,MAAO,cACPC,KACE,6HACFC,GAAI,SACJC,KAAM,cAER,CACEH,MAAO,cACPC,KACE,oJACFC,GAAI,SACJC,KAAM,eCkEV,MA7EiB,IAAe,IAAd,KAAEC,GAAM,EACxB,MAAM,EAACC,EAAc,EAACC,IAAoBC,EAAAA,EAAAA,UAAS,MAEnD,OACE,gBAAC,IAAM,KACL,2BAASC,UAAU,oBACjB,gBAAC,IAAG,CACFC,MAAOL,EAAKM,UAAUC,gBAAgBF,MACtCG,MAAO,CAAEC,SAAU,UAAWC,UAAW,QAASC,QAAS,OAC3DC,IAAI,2CAEN,uBAAKR,UAAU,eACb,0BAAI,oBACJ,yBAAG,6DAEL,uBAAKA,UAAU,WACb,0BAAQS,QAAS,KAAMC,EAAAA,EAAAA,GAAS,UAC9B,0BAAI,SAEN,0BAAQD,QAAS,KAAMC,EAAAA,EAAAA,GAAS,YAC9B,0BAAI,WAEN,0BAAQD,QAAS,KAAMC,EAAAA,EAAAA,GAAS,YAC9B,0BAAI,aAKTnB,EAAWoB,KAAIC,IACd,MAAMC,EAAWD,EAAKjB,KAEtB,OACE,2BAASK,UAAU,eAAeN,GAAE,GAAKkB,EAAKlB,IAC5C,gBAAC,IAAG,CACFO,MAAOL,EAAKiB,GAAUV,gBAAgBF,MACtCG,MAAO,CACLC,SAAU,UACVC,UAAW,QACXC,QAAS,OAEXC,IAAI,0BAEN,uBACER,UAAS,iBACPH,IAAkBgB,EAAQ,uBAA4B,OAGxD,uBAAKb,UAAU,SACb,0BAAKY,EAAKpB,QAGXK,IAAkBgB,EACjB,uBAAKb,UAAU,WACb,yBAAIY,EAAKnB,MACT,uBAAKO,UAAU,sBACb,qBAAGc,KAAK,YAAW,gBAGrB,0BAAQL,QAAS,IAAMX,EAAiB,OAAO,UAE/C,KAEHD,IAAkBgB,EAAW,KAC5B,uBAAKb,UAAU,eACb,0BAAQS,QAAS,IAAMX,EAAiBe,IAAW,iBAMjD,IAGP,C","sources":["webpack://gatsby-starter-hello-world/./node_modules/gatsby-plugin-smoothscroll/index.js","webpack://gatsby-starter-hello-world/./src/data/rooms-type.js","webpack://gatsby-starter-hello-world/./src/pages/room.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\n/**\n * Smooth scrolling onClick event handler\n * @param {string} selector argument will be passed to `querySelector`, usually an HTML id\n * @param {string} [blockPosition='start'] argument will be used to determine position where will be scrolled to (start, center, end, nearest)\n * @returns {boolean} false if `document.querySelector` doesn't find a match, otherwise true\n */\nvar scrollTo = function scrollTo(selector, blockPosition) {\n  if (blockPosition === void 0) {\n    blockPosition = 'start';\n  }\n\n  var element = document.querySelector(selector);\n\n  if (element) {\n    element.scrollIntoView({\n      behavior: 'smooth',\n      block: blockPosition\n    });\n    return true;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn(\"gatsby-plugin-smoothscroll:\\n The selector: '%s' wasn't found in the document.\\n Make sure you pass in a valid CSS selector string.\", selector);\n  }\n\n  return false;\n};\n\nvar _default = scrollTo;\nexports[\"default\"] = _default;","export const ROOMS_TYPE = [\n  {\n    title: \"Lake View\",\n    text:\n      \"They have a direct access to the shared terrace where you can sit and enjoy the view during the day and your meals.\",\n    id: \"lake\",\n    name: \"lakeView\",\n  },\n  {\n    title: \"Garden View\",\n    text:\n      \"They have a direct access to the garden where you can have lunch or dinner while enjoying the peace and quiet of our park.\",\n    id: \"garden\",\n    name: \"gardenView\",\n  },\n  {\n    title: \"Inside View\",\n    text:\n      \" In a welcoming atmosphere you could enjoy the fresh breeze coming from the mountains that every night blows giving a great feeling of freshness.\",\n    id: \"inside\",\n    name: \"insideView\",\n  },\n]\n","import React, { useState } from \"react\"\nimport { graphql } from \"gatsby\"\nimport scrollTo from \"gatsby-plugin-smoothscroll\"\nimport Img from \"gatsby-image\"\n\nimport Layout from \"../layouts\"\nimport { ROOMS_TYPE } from \"../data/rooms-type\"\nimport \"../styles/room.scss\"\n\nconst RoomPage = ({ data }) => {\n  const [toggleDetails, setToggleDetails] = useState(null)\n\n  return (\n    <Layout>\n      <section className=\"room-page-header\">\n        <Img\n          fluid={data.headerImg.childImageSharp.fluid}\n          style={{ position: \"initial\", objectFit: \"cover\", opacity: \"0.5\" }}\n          alt=\"beautiful lake view from hotel bedroom\"\n        />\n        <div className=\"header-text\">\n          <h2>An elegant touch</h2>\n          <p>Three different types of Rooms with a new minimal style.</p>\n        </div>\n        <div className=\"actions\">\n          <button onClick={() => scrollTo(\"#lake\")}>\n            <h3>Lake</h3>\n          </button>\n          <button onClick={() => scrollTo(\"#inside\")}>\n            <h3>Inside</h3>\n          </button>\n          <button onClick={() => scrollTo(\"#garden\")}>\n            <h3>Garden</h3>\n          </button>\n        </div>\n      </section>\n\n      {ROOMS_TYPE.map(room => {\n        const roomName = room.name\n\n        return (\n          <section className=\"room-section\" id={`${room.id}`}>\n            <Img\n              fluid={data[roomName].childImageSharp.fluid}\n              style={{\n                position: \"initial\",\n                objectFit: \"cover\",\n                opacity: \"0.5\",\n              }}\n              alt=\"hotel bedroom so cool\"\n            />\n            <div\n              className={`room-content ${\n                toggleDetails === roomName ? `room-content-details` : null\n              }`}\n            >\n              <div className=\"title\">\n                <h3>{room.title}</h3>\n              </div>\n\n              {toggleDetails === roomName ? (\n                <div className=\"details\">\n                  <p>{room.text}</p>\n                  <div className=\"book-btn-container\">\n                    <a href=\"/booking\">Book a room</a>\n                  </div>\n\n                  <button onClick={() => setToggleDetails(null)}>close</button>\n                </div>\n              ) : null}\n\n              {toggleDetails === roomName ? null : (\n                <div className=\"details-btn\">\n                  <button onClick={() => setToggleDetails(roomName)}>\n                    See details\n                  </button>\n                </div>\n              )}\n            </div>\n          </section>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default RoomPage\n\nexport const pageQuery = graphql`\n  query {\n    headerImg: file(relativePath: { eq: \"lake-view-window.png\" }) {\n      id\n      childImageSharp {\n        fluid(quality: 100) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    lakeView: file(relativePath: { eq: \"bed-room-lake.jpg\" }) {\n      id\n      childImageSharp {\n        fluid(quality: 100) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    gardenView: file(relativePath: { eq: \"garden-room-vertical.jpg\" }) {\n      id\n      childImageSharp {\n        fluid(quality: 100) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    insideView: file(relativePath: { eq: \"intern-room-vertical.jpg\" }) {\n      id\n      childImageSharp {\n        fluid(quality: 100) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\n"],"names":["exports","_default","selector","blockPosition","element","document","querySelector","scrollIntoView","behavior","block","ROOMS_TYPE","title","text","id","name","data","toggleDetails","setToggleDetails","useState","className","fluid","headerImg","childImageSharp","style","position","objectFit","opacity","alt","onClick","scrollTo","map","room","roomName","href"],"sourceRoot":""}